"""
Django settings for track project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from env import env
from email.policy import default
import os
from pathlib import Path
from decouple import config
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-cg1+a_)1$+x4$82mmeeg!fn_^mqu^l=8ca-v9cis3nz6x-2nv+'


SECRET_KEY = os.environ.get(
    'DJANGO_SECRET_KEY', 'django-insecure-cg1+a_)1$+x4$82mmeeg!fn_^mqu^l=8ca-v9cis3nz6x-2nv+')
# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'


DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


#ALLOWED_HOSTS = ['trackfi.herokuapp.com', '127.0.0.1']
ALLOWED_HOSTS = ['*']
# 'trackfi.herokuapp.com'
'''
Env = env()
AWS_ACCESS_KEY_ID = Env.aws_access_key_id()
AWS_SCERET_ACCESS_KEY = Env.aws_secret_access_key()
AWS_STORAGE_BUCKET_NAME = Env.aws_storage_bucket_name()

AWS_QUERYSTRING_AUTH = Env.aws_querystring_auth()'''

AWS_ACCESS_KEY_ID = 'AKIAXYZ5OJWC53DRZE54'
AWS_SCERET_ACCESS_KEY = 'xpzlZKDsLyvCGdnRmAVQK/oVSQfKOgM95Q+gouFP'
AWS_STORAGE_BUCKET_NAME = 'track-profile-avatars'

AWS_QUERYSTRING_AUTH = False
CORS_ORIGIN_ALLOW_ALL = True

AUTH_USER_MODEL = 'users.CustomUser'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'cash.apps.CashConfig',
    'users.apps.UsersConfig',

    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'dj_rest_auth.registration',
    'corsheaders',
    'drf_yasg',
    # 'drf_writable_nested',

]

# config/settings.py
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticated',  # new
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}

AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
]
REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'users.serializers.CustomRegisterSerializer',

}
REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'users.serializers.CustomRegisterSerializer',

    'LOGIN_SERIALIZER': 'users.serializers.CustomLoginSerializer',


}
OLD_PASSWORD_FIELD_ENABLED = True
REST_USE_JWT = True
JWT_AUTH_COOKIE = 'app-auth'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # new
SITE_ID = 1  # new
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'
#SIGNUP_REDIRECT_URL = 'http://localhost:8000/api/users/login'
#LOGOUT_REDIRECT_URL = 'http://localhost:8000/api/users/login'
#ACCOUNT_CONFIRM_EMAIL_ON_GET = True
#LOGIN_URL = 'http://localhost:8000/api/users/login'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]


ROOT_URLCONF = 'track.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'track.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'trackDb',
        'USER': 'postgres',
        'PASSWORD': 'dlion5ive',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

if os.getcwd() == '/app':
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.config(default='postgres://localhost')}
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    # {
    #    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
        }
    }
}


LOGIN_REDIRECT_URL = 'http://127.0.0.1:8000/api/all-transactions'
ACCOUNT_LOGOUT_REDIRECT_URL = 'http://127.0.0.1:8000/api/users/register'
